# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # notifytelegram trigger event
      - name: Notify Telegram Channel
        run: |
          echo Notifying Telegram Channel @DevOps_Karl
          date
          ls -la
          uname -a
          df -h
          which wget
          which curl
          curl -X POST -H "Content-Type: application/json" -d '{"value1":"New push commit","value2":"${{ github.event.head_commit.message }}","value3":"${{ github.sha }}"}' https://maker.ifttt.com/trigger/notifytelegram/with/key/${{ secrets.IFTTT_KEY }}
          
      # notifytwitter trigger event
      - name: Notify Telegram Channel
        run: |
          echo Notifying Twitter Channel @DevOps_Karl
          date
          ls -la
          uname -a
          df -h
          which wget
          which curl
          curl -X POST -H "Content-Type: application/json" -d '{"value1":"New push commit","value2":"${{ github.event.head_commit.message }}","value3":"${{ github.sha }}"}' https://maker.ifttt.com/trigger/notifytwitter/with/key/${{ secrets.IFTTT_KEY }}
          
     # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true
    
    # Configure Docker with Credentials
      - name: Configure Docker
        run: |
          gcloud auth configure-docker
      
    # Build the Docker image
      - name: Build & Publish
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}
          gcloud config set run/region us-central1
      
    # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          gcloud run deploy ${{ secrets.GCP_APPLICATION }} --image gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }} \
          --platform managed \
          --allow-unauthenticated \
          --memory 512M     
